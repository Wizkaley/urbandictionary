name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REPO: ${{ github.repository }}
  BUILD_BRANCH: ${{ github.ref }}
  BUILD_COMMIT: ${{ github.sha }}
  BUILD_RUNID: ${{ github.run_id }}
  CI_ENDPOINT_HOSTNAME: $GITHUB_SERVER_URL
  PULL_REQUEST_NUMBER: ${{ github.event.number }}
  
  
  
  

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set current date as env variable
      id: startedAt
      run: echo "::set-output name=startedAt::$(date +%s)"
  
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

    - name: Print Custom Env Variables
      run: |
       echo $REPO
       echo $GITHUB_HEAD_REF
       echo $BUILD_COMMIT
       echo $GITHUB_SERVER_URL 
       echo $BUILD_RUNID
       echo $PULL_REQUEST_NUMBER
       echo $GITHUB_EVENT_NAME
    - name: Post Build Success to DI
      if: ${{ success() }}
      run: |
       # Built At time 
       echo Built At :: $(date --utc +%FT%T.%3NZ)
       # status of the build
       status=Passed
       echo $status
       startedTime=${{ steps.startedAt.outputs.startedAt }}
       echo started :: $startedTime
       endTime=$(date +%s)
       echo end :: $endTime
       ELAPSED=$((endTime-startedTime))
       # Duration of the time
       echo $(($ELAPSED/60))m $(($ELAPSED%60))s
       
       echo Publishing the build now ...
       #cd buildScript
       echo $PWD
       host=https://local-core.gravitant.net/
       token=O7d-iOHseIyoMyQM65ifIB6KSRx4taHChB8aEu_06Z_ihENnewwtqEtxmu2nkDu7
       serviceName=urbanDictionary
       # $BUILD_RUNID
       #providerHref="https://github.com/$REPO"
       # $status
       duration=$(($ELAPSED*1000000))
       builtat=$(date --utc +%FT%T.%3NZ)
       #$BUILD_BRANCH 
       #$GITHUB_EVENT_NAME 
       #$PULL_REQUEST_NUMBER 
       #$BUILD_COMMIT
       buildengine="GITACTIONS"
       # $GITHUB_SERVER_URL 
       repourl=$(echo "https://github.com/$REPO")
       bs="master"
       prn=123
       echo "-------------------------------------"
       echo $host
       echo $token
       echo $serviceName
       echo $BUILD_RUNID
       echo $repourl
       echo $status
       echo $duration
       echo $builtat
       echo $bs
       echo $GITHUB_EVENT_NAME 
       echo $prn
       echo $BUILD_COMMIT
       echo $buildengine
       echo $GITHUB_SERVER_URL 
       echo $repourl
       
       echo "-------------------------------------"\
       go build buildscript/postBuildsToDI.go 
       echo "./buildscript/postBuildsToDI $host $token $serviceName $BUILD_RUNID $repourl $status $duration $builtat $bs $GITHUB_EVENT_NAME $PULL_REQUEST_NUMBER $BUILD_COMMIT $buildengine $GITHUB_SERVER_URL $repourl"
       ./buildscript/postBuildsToDI $host $token $serviceName $BUILD_RUNID $repourl $status $duration $builtat $bs $GITHUB_EVENT_NAME $prn $BUILD_COMMIT $buildengine $GITHUB_SERVER_URL $repourl
    - name: Post Build Failure to DI
      if: ${{ failure() }}
      run: |
       # built_at='2020-01-20T17:42:40Z'
       echo $(date --utc +%FT%T.%3NZ)
       status=Failed
       echo $status
