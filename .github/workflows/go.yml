name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REPO: ${{ github.repository }}
  BUILD_BRANCH: ${{ github.ref }}
  BUILD_COMMIT: ${{ github.sha }}
  BUILD_RUNID: ${{ github.run_id }}
  CI_ENDPOINT_HOSTNAME: $GITHUB_SERVER_URL
  PULL_REQUEST_NUMBER: ${{ github.event.number }}
  BUILD_ENGINE: "GitHub Actions"
  
  
  

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set current date as env variable
      id: startedAt
      run: echo "::set-output name=startedAt::$(date +%s)"
  
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

    - name: Print Custom Env Variables
      run: |
       prnumber=${PULL_REQUEST_NUMBER:-"NIL"}
       branch=${BUILD_BRANCH:-"master"}
       echo $REPO
       echo $GITHUB_HEAD_REF
       echo $branch
       echo $BUILD_COMMIT
       echo $GITHUB_SERVER_URL 
       echo $BUILD_RUNID
       echo $prnumber
       echo $GITHUB_EVENT_NAME
    - name: Post Build Success to DI
      if: ${{ success() }}
      run: |
          echo Built At :: $(date --utc +%FT%T.%3NZ)
          status=passed
          echo Status :: $status
          startedTime=${{ steps.startedAt.outputs.startedAt }}
          endTime=$(date +%s)
          ELAPSED=$((endTime-startedTime))
          # Duration of the time
          echo Build Duration :: $(($ELAPSED/60))m $(($ELAPSED%60))s
          echo Publishing the build now ...
          
          serviceName=${{ github.event.repository.name }}
          echo Service Name :: $serviceName
          providerHref=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          duration=$(($ELAPSED*1000000000))
          builtat=$(date --utc +%FT%T.%3NZ)
          repourl=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY
          host="dev-dash-regression2.multicloud-ibm.com"
          token="eAxRRj6dPP6o2ET0gruZC43llecDgS6GY9jzEFuDpUoZJU3hnsKyZqNPcl3lC9q1"
          chmod +x preparebuild.sh
          ./preparebuild.sh $GITHUB_EVENT_NAME $host $token $serviceName $BUILD_RUNID $providerHref $status $duration $builtat $BUILD_BRANCH $GITHUB_EVENT_NAME $PULL_REQUEST_NUMBER $BUILD_COMMIT "$BUILD_ENGINE" $GITHUB_SERVER_URL $repourl
          
    - name: Post Build Failure to DI
      if: ${{ failure() }}
      run: |
          echo Built At :: $(date --utc +%FT%T.%3NZ)
          status=failed
          echo Status :: $status
          startedTime=${{ steps.startedAt.outputs.startedAt }}
          endTime=$(date +%s)
          ELAPSED=$((endTime-startedTime))
          # Duration of the time
          echo Build Duration :: $(($ELAPSED/60))m $(($ELAPSED%60))s
          echo Publishing the build now ...
          
          serviceName=${{ github.event.repository.name }}
          echo Service Name :: $serviceName
          providerHref=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          duration=$(($ELAPSED*1000000000))
          builtat=$(date --utc +%FT%T.%3NZ)
          repourl=$GITHUB_SERVER_URL/$REPO
          host="dev-dash-regression2.multicloud-ibm.com"
          token="eAxRRj6dPP6o2ET0gruZC43llecDgS6GY9jzEFuDpUoZJU3hnsKyZqNPcl3lC9q1"
          chmod +x preparebuild.sh
          ./preparebuild.sh $GITHUB_EVENT_NAME $host $token $serviceName $BUILD_RUNID $providerHref $status $duration $builtat $BUILD_BRANCH $GITHUB_EVENT_NAME $PULL_REQUEST_NUMBER $BUILD_COMMIT "$BUILD_ENGINE" $GITHUB_SERVER_URL $repourl
